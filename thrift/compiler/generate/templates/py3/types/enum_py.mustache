{{!

  Copyright (c) Meta Platforms, Inc. and affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!

This is a template for creating thrift-python enums

}}
{{#program:enums}}


class {{enum:name}}(thrift.py3.types.{{!
        }}{{^enum:flags?}}CompiledEnum{{/enum:flags?}}{{!
        }}{{#enum:flags?}}Flag{{/enum:flags?}}):
    {{#enum:values}}
    {{enum_value:py_name}} = {{enum_value:value}}
    {{/enum:values}}

    __module__ = _fbthrift__module_name__
    {{! prevent accidental treatment as py-deprecated }}
    __slots__ = ()

    @staticmethod
    def __get_metadata__():
        return {{#program:py3Namespaces}}{{value}}.{{/program:py3Namespaces}}{{program:name}}.thrift_metadata.gen_metadata_enum_{{enum:name}}()

    @staticmethod
    def __get_thrift_name__():
        return "{{program:name}}.{{enum:name}}"

    def _to_python(self):
        import importlib
        {{!TODO: accommodate root_module_prefix}}
        python_types = importlib.import_module(
            "{{#program:py3Namespaces}}{{value}}.{{/program:py3Namespaces}}{{program:name}}.thrift_types"
        )
        return python_types.{{enum:name}}(self.value)

    def _to_py3(self):
        return self

    def _to_py_deprecated(self):
        return self.value


{{/program:enums}}

// Autogenerated by Thrift for thrift/compiler/test/fixtures/types/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module

import (
    "maps"

    included "included"
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
    metadata "github.com/facebook/fbthrift/thrift/lib/thrift/metadata"
)

var _ = included.GoUnusedProtection__
// (needed to ensure safety because of naive import list construction)
var _ = thrift.VOID
var _ = maps.Copy[map[int]int, map[int]int]
var _ = metadata.GoUnusedProtection__

// Premade Thrift types
var (
    premadeThriftType_module_has_bitwise_ops = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TEnum: &metadata.ThriftEnumType{
    Name: "module.has_bitwise_ops",
},

        }
    }()
    premadeThriftType_module_is_unscoped = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TEnum: &metadata.ThriftEnumType{
    Name: "module.is_unscoped",
},

        }
    }()
    premadeThriftType_module_MyForwardRefEnum = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TEnum: &metadata.ThriftEnumType{
    Name: "module.MyForwardRefEnum",
},

        }
    }()
    premadeThriftType_module_empty_struct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.empty_struct",
},

        }
    }()
    premadeThriftType_string = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE),

        }
    }()
    premadeThriftType_module_decorated_struct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.decorated_struct",
},

        }
    }()
    premadeThriftType_i32 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I32_TYPE),

        }
    }()
    premadeThriftType_list_i32 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_set_i32 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TSet: &metadata.ThriftSetType{
    ValueType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_module_set_i32_7194 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.set_i32_7194",
    UnderlyingType: premadeThriftType_set_i32,
},

        }
    }()
    premadeThriftType_map_i32_string = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i32,
    ValueType: premadeThriftType_string,
},

        }
    }()
    premadeThriftType_module_map_i32_string_1261 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.map_i32_string_1261",
    UnderlyingType: premadeThriftType_map_i32_string,
},

        }
    }()
    premadeThriftType_module_ContainerStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ContainerStruct",
},

        }
    }()
    premadeThriftType_module_CppTypeStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.CppTypeStruct",
},

        }
    }()
    premadeThriftType_i64 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I64_TYPE),

        }
    }()
    premadeThriftType_module_VirtualStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.VirtualStruct",
},

        }
    }()
    premadeThriftType_module_MyStructWithForwardRefEnum = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.MyStructWithForwardRefEnum",
},

        }
    }()
    premadeThriftType_bool = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE),

        }
    }()
    premadeThriftType_module_TrivialNumeric = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.TrivialNumeric",
},

        }
    }()
    premadeThriftType_module_TrivialNestedWithDefault = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.TrivialNestedWithDefault",
},

        }
    }()
    premadeThriftType_map_string_i32 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_string,
    ValueType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_module_ComplexString = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ComplexString",
},

        }
    }()
    premadeThriftType_module_ComplexNestedWithDefault = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ComplexNestedWithDefault",
},

        }
    }()
    premadeThriftType_byte = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE),

        }
    }()
    premadeThriftType_i16 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I16_TYPE),

        }
    }()
    premadeThriftType_module_MinPadding = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.MinPadding",
},

        }
    }()
    premadeThriftType_module_MinPaddingWithCustomType = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.MinPaddingWithCustomType",
},

        }
    }()
    premadeThriftType_module_MyDataItem = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.MyDataItem",
},

        }
    }()
    premadeThriftType_module_MyStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.MyStruct",
},

        }
    }()
    premadeThriftType_module_Renaming = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.Renaming",
},

        }
    }()
    premadeThriftType_binary = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE),

        }
    }()
    premadeThriftType_module_TBinary = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.TBinary",
    UnderlyingType: premadeThriftType_binary,
},

        }
    }()
    premadeThriftType_module_TBinary_8623 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.TBinary_8623",
    UnderlyingType: premadeThriftType_module_TBinary,
},

        }
    }()
    premadeThriftType_module_SomeListOfTypeMap_2468 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.SomeListOfTypeMap_2468",
    UnderlyingType: included.GetMetadataThriftType("included.SomeListOfTypeMap"),
},

        }
    }()
    premadeThriftType_module_AnnotatedTypes = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.AnnotatedTypes",
},

        }
    }()
    premadeThriftType_module_ForwardUsageStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ForwardUsageStruct",
},

        }
    }()
    premadeThriftType_module_ForwardUsageByRef = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ForwardUsageByRef",
},

        }
    }()
    premadeThriftType_module_ForwardUsageRoot = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.ForwardUsageRoot",
},

        }
    }()
    premadeThriftType_module_IncompleteMapDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.IncompleteMapDep",
},

        }
    }()
    premadeThriftType_map_i32_module_IncompleteMapDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i32,
    ValueType: premadeThriftType_module_IncompleteMapDep,
},

        }
    }()
    premadeThriftType_module_IncompleteMap = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.IncompleteMap",
},

        }
    }()
    premadeThriftType_module_CompleteMapDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.CompleteMapDep",
},

        }
    }()
    premadeThriftType_map_i32_module_CompleteMapDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i32,
    ValueType: premadeThriftType_module_CompleteMapDep,
},

        }
    }()
    premadeThriftType_module_CompleteMap = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.CompleteMap",
},

        }
    }()
    premadeThriftType_module_IncompleteListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.IncompleteListDep",
},

        }
    }()
    premadeThriftType_list_module_IncompleteListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_IncompleteListDep,
},

        }
    }()
    premadeThriftType_module_IncompleteList = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.IncompleteList",
},

        }
    }()
    premadeThriftType_module_CompleteListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.CompleteListDep",
},

        }
    }()
    premadeThriftType_list_module_CompleteListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_CompleteListDep,
},

        }
    }()
    premadeThriftType_module_CompleteList = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.CompleteList",
},

        }
    }()
    premadeThriftType_module_AdaptedListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptedListDep",
},

        }
    }()
    premadeThriftType_list_module_AdaptedListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_AdaptedListDep,
},

        }
    }()
    premadeThriftType_module_AdaptedList = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptedList",
},

        }
    }()
    premadeThriftType_module_DependentAdaptedListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.DependentAdaptedListDep",
},

        }
    }()
    premadeThriftType_list_module_DependentAdaptedListDep = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_DependentAdaptedListDep,
},

        }
    }()
    premadeThriftType_module_DependentAdaptedList = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.DependentAdaptedList",
},

        }
    }()
    premadeThriftType_module_list_i32_9187 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.list_i32_9187",
    UnderlyingType: premadeThriftType_list_i32,
},

        }
    }()
    premadeThriftType_module_set_i32_7070 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.set_i32_7070",
    UnderlyingType: premadeThriftType_set_i32,
},

        }
    }()
    premadeThriftType_map_i32_i32 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i32,
    ValueType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_module_map_i32_i32_9565 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.map_i32_i32_9565",
    UnderlyingType: premadeThriftType_map_i32_i32,
},

        }
    }()
    premadeThriftType_module_string_5252 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.string_5252",
    UnderlyingType: premadeThriftType_string,
},

        }
    }()
    premadeThriftType_module_i32_9314 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.i32_9314",
    UnderlyingType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_module_AllocatorAware = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.AllocatorAware",
},

        }
    }()
    premadeThriftType_module_AllocatorAware2 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.AllocatorAware2",
},

        }
    }()
    premadeThriftType_module_IntTypedef = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.IntTypedef",
    UnderlyingType: premadeThriftType_i32,
},

        }
    }()
    premadeThriftType_module_UintTypedef = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.UintTypedef",
    UnderlyingType: premadeThriftType_module_IntTypedef,
},

        }
    }()
    premadeThriftType_module_TypedefStruct = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.TypedefStruct",
},

        }
    }()
    premadeThriftType_module_StructWithDoubleUnderscores = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TStruct: &metadata.ThriftStructType{
    Name: "module.StructWithDoubleUnderscores",
},

        }
    }()
    premadeThriftType_map_module_TBinary_i64 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_module_TBinary,
    ValueType: premadeThriftType_i64,
},

        }
    }()
    premadeThriftType_list_i64 = func() *metadata.ThriftType {
        return &metadata.ThriftType{
            TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_i64,
},

        }
    }()
)

var premadeThriftTypesMap = func() map[string]*metadata.ThriftType {
    fbthriftThriftTypesMap := make(map[string]*metadata.ThriftType)
    fbthriftThriftTypesMap["module.has_bitwise_ops"] = premadeThriftType_module_has_bitwise_ops
    fbthriftThriftTypesMap["module.is_unscoped"] = premadeThriftType_module_is_unscoped
    fbthriftThriftTypesMap["module.MyForwardRefEnum"] = premadeThriftType_module_MyForwardRefEnum
    fbthriftThriftTypesMap["module.empty_struct"] = premadeThriftType_module_empty_struct
    fbthriftThriftTypesMap["string"] = premadeThriftType_string
    fbthriftThriftTypesMap["module.decorated_struct"] = premadeThriftType_module_decorated_struct
    fbthriftThriftTypesMap["i32"] = premadeThriftType_i32
    fbthriftThriftTypesMap["module.set_i32_7194"] = premadeThriftType_module_set_i32_7194
    fbthriftThriftTypesMap["module.map_i32_string_1261"] = premadeThriftType_module_map_i32_string_1261
    fbthriftThriftTypesMap["module.ContainerStruct"] = premadeThriftType_module_ContainerStruct
    fbthriftThriftTypesMap["module.CppTypeStruct"] = premadeThriftType_module_CppTypeStruct
    fbthriftThriftTypesMap["i64"] = premadeThriftType_i64
    fbthriftThriftTypesMap["module.VirtualStruct"] = premadeThriftType_module_VirtualStruct
    fbthriftThriftTypesMap["module.MyStructWithForwardRefEnum"] = premadeThriftType_module_MyStructWithForwardRefEnum
    fbthriftThriftTypesMap["bool"] = premadeThriftType_bool
    fbthriftThriftTypesMap["module.TrivialNumeric"] = premadeThriftType_module_TrivialNumeric
    fbthriftThriftTypesMap["module.TrivialNestedWithDefault"] = premadeThriftType_module_TrivialNestedWithDefault
    fbthriftThriftTypesMap["module.ComplexString"] = premadeThriftType_module_ComplexString
    fbthriftThriftTypesMap["module.ComplexNestedWithDefault"] = premadeThriftType_module_ComplexNestedWithDefault
    fbthriftThriftTypesMap["byte"] = premadeThriftType_byte
    fbthriftThriftTypesMap["i16"] = premadeThriftType_i16
    fbthriftThriftTypesMap["module.MinPadding"] = premadeThriftType_module_MinPadding
    fbthriftThriftTypesMap["module.MinPaddingWithCustomType"] = premadeThriftType_module_MinPaddingWithCustomType
    fbthriftThriftTypesMap["module.MyDataItem"] = premadeThriftType_module_MyDataItem
    fbthriftThriftTypesMap["module.MyStruct"] = premadeThriftType_module_MyStruct
    fbthriftThriftTypesMap["module.Renaming"] = premadeThriftType_module_Renaming
    fbthriftThriftTypesMap["binary"] = premadeThriftType_binary
    fbthriftThriftTypesMap["module.TBinary"] = premadeThriftType_module_TBinary
    fbthriftThriftTypesMap["module.TBinary_8623"] = premadeThriftType_module_TBinary_8623
    fbthriftThriftTypesMap["module.SomeListOfTypeMap_2468"] = premadeThriftType_module_SomeListOfTypeMap_2468
    fbthriftThriftTypesMap["module.AnnotatedTypes"] = premadeThriftType_module_AnnotatedTypes
    fbthriftThriftTypesMap["module.ForwardUsageStruct"] = premadeThriftType_module_ForwardUsageStruct
    fbthriftThriftTypesMap["module.ForwardUsageByRef"] = premadeThriftType_module_ForwardUsageByRef
    fbthriftThriftTypesMap["module.ForwardUsageRoot"] = premadeThriftType_module_ForwardUsageRoot
    fbthriftThriftTypesMap["module.IncompleteMapDep"] = premadeThriftType_module_IncompleteMapDep
    fbthriftThriftTypesMap["module.IncompleteMap"] = premadeThriftType_module_IncompleteMap
    fbthriftThriftTypesMap["module.CompleteMapDep"] = premadeThriftType_module_CompleteMapDep
    fbthriftThriftTypesMap["module.CompleteMap"] = premadeThriftType_module_CompleteMap
    fbthriftThriftTypesMap["module.IncompleteListDep"] = premadeThriftType_module_IncompleteListDep
    fbthriftThriftTypesMap["module.IncompleteList"] = premadeThriftType_module_IncompleteList
    fbthriftThriftTypesMap["module.CompleteListDep"] = premadeThriftType_module_CompleteListDep
    fbthriftThriftTypesMap["module.CompleteList"] = premadeThriftType_module_CompleteList
    fbthriftThriftTypesMap["module.AdaptedListDep"] = premadeThriftType_module_AdaptedListDep
    fbthriftThriftTypesMap["module.AdaptedList"] = premadeThriftType_module_AdaptedList
    fbthriftThriftTypesMap["module.DependentAdaptedListDep"] = premadeThriftType_module_DependentAdaptedListDep
    fbthriftThriftTypesMap["module.DependentAdaptedList"] = premadeThriftType_module_DependentAdaptedList
    fbthriftThriftTypesMap["module.list_i32_9187"] = premadeThriftType_module_list_i32_9187
    fbthriftThriftTypesMap["module.set_i32_7070"] = premadeThriftType_module_set_i32_7070
    fbthriftThriftTypesMap["module.map_i32_i32_9565"] = premadeThriftType_module_map_i32_i32_9565
    fbthriftThriftTypesMap["module.string_5252"] = premadeThriftType_module_string_5252
    fbthriftThriftTypesMap["module.i32_9314"] = premadeThriftType_module_i32_9314
    fbthriftThriftTypesMap["module.AllocatorAware"] = premadeThriftType_module_AllocatorAware
    fbthriftThriftTypesMap["module.AllocatorAware2"] = premadeThriftType_module_AllocatorAware2
    fbthriftThriftTypesMap["module.IntTypedef"] = premadeThriftType_module_IntTypedef
    fbthriftThriftTypesMap["module.UintTypedef"] = premadeThriftType_module_UintTypedef
    fbthriftThriftTypesMap["module.TypedefStruct"] = premadeThriftType_module_TypedefStruct
    fbthriftThriftTypesMap["module.StructWithDoubleUnderscores"] = premadeThriftType_module_StructWithDoubleUnderscores
    return fbthriftThriftTypesMap
}()

var structMetadatas = func() []*metadata.ThriftStruct {
    fbthriftResults := make([]*metadata.ThriftStruct, 0)
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_empty_struct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_decorated_struct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ContainerStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CppTypeStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_VirtualStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MyStructWithForwardRefEnum))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_TrivialNumeric))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_TrivialNestedWithDefault))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ComplexString))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ComplexNestedWithDefault))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MinPadding))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MinPaddingWithCustomType))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MyStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MyDataItem))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Renaming))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AnnotatedTypes))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ForwardUsageRoot))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ForwardUsageStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ForwardUsageByRef))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_IncompleteMap))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_IncompleteMapDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CompleteMap))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CompleteMapDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_IncompleteList))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_IncompleteListDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CompleteList))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CompleteListDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptedList))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptedListDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_DependentAdaptedList))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_DependentAdaptedListDep))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AllocatorAware))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AllocatorAware2))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_TypedefStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_StructWithDoubleUnderscores))
    return fbthriftResults
}()

var exceptionMetadatas = func() []*metadata.ThriftException {
    fbthriftResults := make([]*metadata.ThriftException, 0)
    return fbthriftResults
}()

var enumMetadatas = func() []*metadata.ThriftEnum {
    fbthriftResults := make([]*metadata.ThriftEnum, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.has_bitwise_ops",
            Elements: map[int32]string{
                0: "none",
                1: "zero",
                2: "one",
                4: "two",
                8: "three",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.is_unscoped",
            Elements: map[int32]string{
                0: "hello",
                1: "world",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.MyForwardRefEnum",
            Elements: map[int32]string{
                0: "ZERO",
                12: "NONZERO",
            },
        },
    )
    return fbthriftResults
}()

var serviceMetadatas = func() []*metadata.ThriftService {
    fbthriftResults := make([]*metadata.ThriftService, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.SomeService",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "bounce_map",
                    IsOneway:   false,
                    ReturnType: included.GetMetadataThriftType("included.SomeMap"),
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "m",
                            IsOptional: false,
                            Type:       included.GetMetadataThriftType("included.SomeMap"),
                        },
                    },
                },
                &metadata.ThriftFunction{
                    Name:       "binary_keyed_map",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_map_module_TBinary_i64,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "r",
                            IsOptional: false,
                            Type:       premadeThriftType_list_i64,
                        },
                    },
                },
            },
        },
    )
    return fbthriftResults
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata ThriftType for a given full type name.
func GetMetadataThriftType(fullName string) *metadata.ThriftType {
    return premadeThriftTypesMap[fullName]
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *metadata.ThriftMetadata {
    allEnumsMap := make(map[string]*metadata.ThriftEnum)
    allStructsMap := make(map[string]*metadata.ThriftStruct)
    allExceptionsMap := make(map[string]*metadata.ThriftException)
    allServicesMap := make(map[string]*metadata.ThriftService)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }
    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }
    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }
    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // Obtain Thrift metadatas from recursively included programs...
    var recursiveThriftMetadatas []*metadata.ThriftMetadata
    recursiveThriftMetadatas = append(recursiveThriftMetadatas, included.GetThriftMetadata())

    // ...now merge metadatas from recursively included programs.
    for _, thriftMetadata := range recursiveThriftMetadatas {
        maps.Copy(allEnumsMap, thriftMetadata.GetEnums())
        maps.Copy(allStructsMap, thriftMetadata.GetStructs())
        maps.Copy(allExceptionsMap, thriftMetadata.GetExceptions())
        maps.Copy(allServicesMap, thriftMetadata.GetServices())
    }

    return metadata.NewThriftMetadata().
        SetEnums(allEnumsMap).
        SetStructs(allStructsMap).
        SetExceptions(allExceptionsMap).
        SetServices(allServicesMap)
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *metadata.ThriftMetadata {
    thriftMetadata := GetThriftMetadata()

    allServicesMap := thriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*metadata.ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    thriftMetadata.SetServices(relevantServicesMap)

    return thriftMetadata
}

func getMetadataThriftPrimitiveType(s *thrift.CodecPrimitiveSpec) *metadata.ThriftPrimitiveType {
	var value metadata.ThriftPrimitiveType

	switch s.PrimitiveType {
	case thrift.CODEC_PRIMITIVE_TYPE_BYTE:
		value = metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_BOOL:
		value = metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I16:
		value = metadata.ThriftPrimitiveType_THRIFT_I16_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I32:
		value = metadata.ThriftPrimitiveType_THRIFT_I32_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I64:
		value = metadata.ThriftPrimitiveType_THRIFT_I64_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_FLOAT:
		value = metadata.ThriftPrimitiveType_THRIFT_FLOAT_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_DOUBLE:
		value = metadata.ThriftPrimitiveType_THRIFT_DOUBLE_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_BINARY:
		value = metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_STRING:
		value = metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE
	}

	return thrift.Pointerize(value)
}

func getMetadataThriftEnumType(s *thrift.CodecEnumSpec) *metadata.ThriftEnumType {
	return metadata.NewThriftEnumType().
		SetName(s.ScopedName)
}

func getMetadataThriftSetType(s *thrift.CodecSetSpec) *metadata.ThriftSetType {
	return metadata.NewThriftSetType().
		SetValueType(getMetadataThriftType(s.ElementTypeSpec))
}

func getMetadataThriftListType(s *thrift.CodecListSpec) *metadata.ThriftListType {
	return metadata.NewThriftListType().
		SetValueType(getMetadataThriftType(s.ElementTypeSpec))
}

func getMetadataThriftMapType(s *thrift.CodecMapSpec) *metadata.ThriftMapType {
	return metadata.NewThriftMapType().
		SetKeyType(getMetadataThriftType(s.KeyTypeSpec)).
		SetValueType(getMetadataThriftType(s.ValueTypeSpec))
}

func getMetadataThriftTypedefType(s *thrift.CodecTypedefSpec) *metadata.ThriftTypedefType {
	return metadata.NewThriftTypedefType().
		SetName(s.ScopedName).
		SetUnderlyingType(getMetadataThriftType(s.UnderlyingTypeSpec))
}

func getMetadataThriftStructType(s *thrift.CodecStructSpec) *metadata.ThriftStructType {
	return metadata.NewThriftStructType().
		SetName(s.ScopedName)
}

func getMetadataThriftUnionType(s *thrift.CodecStructSpec) *metadata.ThriftUnionType {
	return metadata.NewThriftUnionType().
		SetName(s.ScopedName)
}

func getMetadataThriftType(s *thrift.TypeSpec) *metadata.ThriftType {
	thriftType := metadata.NewThriftType()
	switch {
	case s.CodecPrimitiveSpec != nil:
		thriftType.SetTPrimitive(getMetadataThriftPrimitiveType(s.CodecPrimitiveSpec))
	case s.CodecEnumSpec != nil:
		thriftType.SetTEnum(getMetadataThriftEnumType(s.CodecEnumSpec))
	case s.CodecSetSpec != nil:
		thriftType.SetTSet(getMetadataThriftSetType(s.CodecSetSpec))
	case s.CodecListSpec != nil:
		thriftType.SetTList(getMetadataThriftListType(s.CodecListSpec))
	case s.CodecMapSpec != nil:
		thriftType.SetTMap(getMetadataThriftMapType(s.CodecMapSpec))
	case s.CodecTypedefSpec != nil:
		thriftType.SetTTypedef(getMetadataThriftTypedefType(s.CodecTypedefSpec))
	case s.CodecStructSpec != nil:
		if s.CodecStructSpec.IsUnion {
			thriftType.SetTUnion(getMetadataThriftUnionType(s.CodecStructSpec))
		} else {
			thriftType.SetTStruct(getMetadataThriftStructType(s.CodecStructSpec))
		}
	}
	return thriftType
}

func getMetadataThriftField(s *thrift.FieldSpec) *metadata.ThriftField {
	return metadata.NewThriftField().
		SetId(int32(s.ID)).
		SetName(s.Name).
		SetIsOptional(s.IsOptional).
		SetType(getMetadataThriftType(s.ValueTypeSpec))
}

func getMetadataThriftStruct(s *thrift.StructSpec) *metadata.ThriftStruct {
	metadataThriftFields := make([]*metadata.ThriftField, len(s.FieldSpecs), len(s.FieldSpecs))
	for i, fieldSpec := range s.FieldSpecs {
		metadataThriftFields[i] = getMetadataThriftField(&fieldSpec)
	}

	return metadata.NewThriftStruct().
		SetName(s.ScopedName).
		SetIsUnion(s.IsUnion).
		SetFields(metadataThriftFields)
}

func getMetadataThriftException(s *thrift.StructSpec) *metadata.ThriftException {
	metadataThriftFields := make([]*metadata.ThriftField, len(s.FieldSpecs), len(s.FieldSpecs))
	for i, fieldSpec := range s.FieldSpecs {
		metadataThriftFields[i] = getMetadataThriftField(&fieldSpec)
	}

	return metadata.NewThriftException().
		SetName(s.ScopedName).
		SetFields(metadataThriftFields)
}

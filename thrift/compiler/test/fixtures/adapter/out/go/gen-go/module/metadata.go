// Autogenerated by Thrift for thrift/compiler/test/fixtures/adapter/src/module.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package module

import (
    "maps"

    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
    metadata "github.com/facebook/fbthrift/thrift/lib/thrift/metadata"
)

// (needed to ensure safety because of naive import list construction)
var _ = thrift.VOID
var _ = maps.Copy[map[int]int, map[int]int]
var _ = metadata.GoUnusedProtection__

// Premade Thrift types
var (
    premadeThriftType_module_Color = &metadata.ThriftType{
        TEnum: &metadata.ThriftEnumType{
    Name: "module.Color",
},

    }
    premadeThriftType_module_ThriftAdaptedEnum = &metadata.ThriftType{
        TEnum: &metadata.ThriftEnumType{
    Name: "module.ThriftAdaptedEnum",
},

    }
    premadeThriftType_string = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE),

    }
    premadeThriftType_module_MyAnnotation = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.MyAnnotation",
},

    }
    premadeThriftType_i32 = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I32_TYPE),

    }
    premadeThriftType_module_i32_5137 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.i32_5137",
    UnderlyingType: premadeThriftType_i32,
},

    }
    premadeThriftType_set_string = &metadata.ThriftType{
        TSet: &metadata.ThriftSetType{
    ValueType: premadeThriftType_string,
},

    }
    premadeThriftType_module_SetWithAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.SetWithAdapter",
    UnderlyingType: premadeThriftType_set_string,
},

    }
    premadeThriftType_module_StringWithAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.StringWithAdapter",
    UnderlyingType: premadeThriftType_string,
},

    }
    premadeThriftType_list_module_StringWithAdapter = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_StringWithAdapter,
},

    }
    premadeThriftType_module_ListWithElemAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.ListWithElemAdapter",
    UnderlyingType: premadeThriftType_list_module_StringWithAdapter,
},

    }
    premadeThriftType_module_ListWithElemAdapter_withAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.ListWithElemAdapter_withAdapter",
    UnderlyingType: premadeThriftType_module_ListWithElemAdapter,
},

    }
    premadeThriftType_module_ListWithElemAdapter_withAdapter_2312 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.ListWithElemAdapter_withAdapter_2312",
    UnderlyingType: premadeThriftType_module_ListWithElemAdapter_withAdapter,
},

    }
    premadeThriftType_map_string_module_ListWithElemAdapter_withAdapter_2312 = &metadata.ThriftType{
        TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_string,
    ValueType: premadeThriftType_module_ListWithElemAdapter_withAdapter_2312,
},

    }
    premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.map_string_ListWithElemAdapter_withAdapter_8454",
    UnderlyingType: premadeThriftType_map_string_module_ListWithElemAdapter_withAdapter_2312,
},

    }
    premadeThriftType_binary = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE),

    }
    premadeThriftType_module_binary_5673 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.binary_5673",
    UnderlyingType: premadeThriftType_binary,
},

    }
    premadeThriftType_i64 = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I64_TYPE),

    }
    premadeThriftType_module_MyI64 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.MyI64",
    UnderlyingType: premadeThriftType_i64,
},

    }
    premadeThriftType_module_DoubleTypedefI64 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.DoubleTypedefI64",
    UnderlyingType: premadeThriftType_module_MyI64,
},

    }
    premadeThriftType_list_i32 = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_i32,
},

    }
    premadeThriftType_set_i32 = &metadata.ThriftType{
        TSet: &metadata.ThriftSetType{
    ValueType: premadeThriftType_i32,
},

    }
    premadeThriftType_map_string_i32 = &metadata.ThriftType{
        TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_string,
    ValueType: premadeThriftType_i32,
},

    }
    premadeThriftType_map_i32_i32 = &metadata.ThriftType{
        TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i32,
    ValueType: premadeThriftType_i32,
},

    }
    premadeThriftType_list_map_i32_i32 = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_map_i32_i32,
},

    }
    premadeThriftType_list_list_map_i32_i32 = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_list_map_i32_i32,
},

    }
    premadeThriftType_module_Foo = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.Foo",
},

    }
    premadeThriftType_module_Baz = &metadata.ThriftType{
        TUnion: &metadata.ThriftUnionType{
    Name: "module.Baz",
},

    }
    premadeThriftType_module_Foo_6868 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.Foo_6868",
    UnderlyingType: premadeThriftType_module_Foo,
},

    }
    premadeThriftType_module_Foo_3943 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.Foo_3943",
    UnderlyingType: premadeThriftType_module_Foo,
},

    }
    premadeThriftType_module_FooWithAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.FooWithAdapter",
    UnderlyingType: premadeThriftType_module_Foo,
},

    }
    premadeThriftType_module_FooWithAdapter_9317 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.FooWithAdapter_9317",
    UnderlyingType: premadeThriftType_module_FooWithAdapter,
},

    }
    premadeThriftType_list_module_FooWithAdapter_9317 = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_module_FooWithAdapter_9317,
},

    }
    premadeThriftType_module_Baz_7352 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.Baz_7352",
    UnderlyingType: premadeThriftType_module_Baz,
},

    }
    premadeThriftType_module_DirectlyAdapted = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.DirectlyAdapted",
},

    }
    premadeThriftType_module_Bar = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.Bar",
},

    }
    premadeThriftType_module_IndependentDirectlyAdapted = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.IndependentDirectlyAdapted",
},

    }
    premadeThriftType_module_StructWithFieldAdapter = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.StructWithFieldAdapter",
},

    }
    premadeThriftType_module_TerseAdaptedFields = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.TerseAdaptedFields",
},

    }
    premadeThriftType_module_A = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.A",
},

    }
    premadeThriftType_module_AdaptedA = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedA",
    UnderlyingType: premadeThriftType_module_A,
},

    }
    premadeThriftType_module_B = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.B",
},

    }
    premadeThriftType_module_Config = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.Config",
},

    }
    premadeThriftType_module_MyStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.MyStruct",
},

    }
    premadeThriftType_module_DurationMs = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.DurationMs",
    UnderlyingType: premadeThriftType_i64,
},

    }
    premadeThriftType_module_IOBuf = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.IOBuf",
    UnderlyingType: premadeThriftType_binary,
},

    }
    premadeThriftType_module_CustomProtocolType = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.CustomProtocolType",
    UnderlyingType: premadeThriftType_module_IOBuf,
},

    }
    premadeThriftType_module_IndirectionString = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.IndirectionString",
    UnderlyingType: premadeThriftType_string,
},

    }
    premadeThriftType_bool = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE),

    }
    premadeThriftType_module_AdaptedBool = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedBool",
    UnderlyingType: premadeThriftType_bool,
},

    }
    premadeThriftType_module_AdaptedInteger = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedInteger",
    UnderlyingType: premadeThriftType_i32,
},

    }
    premadeThriftType_module_AdaptTestStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptTestStruct",
},

    }
    premadeThriftType_byte = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE),

    }
    premadeThriftType_module_AdaptedByte = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedByte",
    UnderlyingType: premadeThriftType_byte,
},

    }
    premadeThriftType_i16 = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_I16_TYPE),

    }
    premadeThriftType_module_AdaptedShort = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedShort",
    UnderlyingType: premadeThriftType_i16,
},

    }
    premadeThriftType_module_AdaptedLong = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedLong",
    UnderlyingType: premadeThriftType_i64,
},

    }
    premadeThriftType_double = &metadata.ThriftType{
        TPrimitive: thrift.Pointerize(metadata.ThriftPrimitiveType_THRIFT_DOUBLE_TYPE),

    }
    premadeThriftType_module_AdaptedDouble = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedDouble",
    UnderlyingType: premadeThriftType_double,
},

    }
    premadeThriftType_module_AdaptedString = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedString",
    UnderlyingType: premadeThriftType_string,
},

    }
    premadeThriftType_list_i64 = &metadata.ThriftType{
        TList: &metadata.ThriftListType{
    ValueType: premadeThriftType_i64,
},

    }
    premadeThriftType_set_i64 = &metadata.ThriftType{
        TSet: &metadata.ThriftSetType{
    ValueType: premadeThriftType_i64,
},

    }
    premadeThriftType_map_i64_i64 = &metadata.ThriftType{
        TMap: &metadata.ThriftMapType{
    KeyType:   premadeThriftType_i64,
    ValueType: premadeThriftType_i64,
},

    }
    premadeThriftType_module_AdaptedEnum = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedEnum",
    UnderlyingType: premadeThriftType_module_ThriftAdaptedEnum,
},

    }
    premadeThriftType_module_DoubleTypedefBool = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.DoubleTypedefBool",
    UnderlyingType: premadeThriftType_module_AdaptedBool,
},

    }
    premadeThriftType_module_AdaptTemplatedTestStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptTemplatedTestStruct",
},

    }
    premadeThriftType_module_AdaptTemplatedNestedTestStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptTemplatedNestedTestStruct",
},

    }
    premadeThriftType_module_AdaptTestUnion = &metadata.ThriftType{
        TUnion: &metadata.ThriftUnionType{
    Name: "module.AdaptTestUnion",
},

    }
    premadeThriftType_module_AdaptedStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.AdaptedStruct",
},

    }
    premadeThriftType_module_DirectlyAdaptedStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.DirectlyAdaptedStruct",
},

    }
    premadeThriftType_module_AdaptedTypedef = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedTypedef",
    UnderlyingType: premadeThriftType_module_AdaptedStruct,
},

    }
    premadeThriftType_module_TypedefOfDirect = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.TypedefOfDirect",
    UnderlyingType: premadeThriftType_module_DirectlyAdaptedStruct,
},

    }
    premadeThriftType_module_StructFieldAdaptedStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.StructFieldAdaptedStruct",
},

    }
    premadeThriftType_module_CircularStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.CircularStruct",
},

    }
    premadeThriftType_module_CircularAdaptee = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.CircularAdaptee",
},

    }
    premadeThriftType_module_AdaptedCircularAdaptee = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.AdaptedCircularAdaptee",
    UnderlyingType: premadeThriftType_module_CircularAdaptee,
},

    }
    premadeThriftType_module_DeclaredAfterStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.DeclaredAfterStruct",
},

    }
    premadeThriftType_module_ReorderedStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.ReorderedStruct",
},

    }
    premadeThriftType_module_RenamedStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.RenamedStruct",
},

    }
    premadeThriftType_module_SameNamespaceStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.SameNamespaceStruct",
},

    }
    premadeThriftType_module_HeapAllocated = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.HeapAllocated",
},

    }
    premadeThriftType_module_MoveOnly = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.MoveOnly",
},

    }
    premadeThriftType_module_AlsoMoveOnly = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.AlsoMoveOnly",
},

    }
    premadeThriftType_module_ApplyAdapter = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.ApplyAdapter",
},

    }
    premadeThriftType_module_TransitiveAdapted = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.TransitiveAdapted",
},

    }
    premadeThriftType_module_CountingInt = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.CountingInt",
    UnderlyingType: premadeThriftType_i64,
},

    }
    premadeThriftType_module_CountingStruct = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.CountingStruct",
},

    }
    premadeThriftType_module_Person = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.Person",
},

    }
    premadeThriftType_module_Person2 = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.Person2",
},

    }
    premadeThriftType_module_RenamedStructWithStructAdapterAndFieldAdapter = &metadata.ThriftType{
        TStruct: &metadata.ThriftStructType{
    Name: "module.RenamedStructWithStructAdapterAndFieldAdapter",
},

    }
    premadeThriftType_module_MyI32 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.MyI32",
    UnderlyingType: premadeThriftType_i32,
},

    }
    premadeThriftType_module_StructWithAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.StructWithAdapter",
    UnderlyingType: premadeThriftType_module_Bar,
},

    }
    premadeThriftType_module_UnionWithAdapter = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.UnionWithAdapter",
    UnderlyingType: premadeThriftType_module_Baz,
},

    }
    premadeThriftType_module_MyI32_4873 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.MyI32_4873",
    UnderlyingType: premadeThriftType_module_MyI32,
},

    }
    premadeThriftType_module_StringWithAdapter_7208 = &metadata.ThriftType{
        TTypedef: &metadata.ThriftTypedefType{
    Name:           "module.StringWithAdapter_7208",
    UnderlyingType: premadeThriftType_module_StringWithAdapter,
},

    }
)

var premadeThriftTypesMap = func() map[string]*metadata.ThriftType {
    fbthriftThriftTypesMap := make(map[string]*metadata.ThriftType)
    fbthriftThriftTypesMap["module.Color"] = premadeThriftType_module_Color
    fbthriftThriftTypesMap["module.ThriftAdaptedEnum"] = premadeThriftType_module_ThriftAdaptedEnum
    fbthriftThriftTypesMap["string"] = premadeThriftType_string
    fbthriftThriftTypesMap["module.MyAnnotation"] = premadeThriftType_module_MyAnnotation
    fbthriftThriftTypesMap["i32"] = premadeThriftType_i32
    fbthriftThriftTypesMap["module.i32_5137"] = premadeThriftType_module_i32_5137
    fbthriftThriftTypesMap["module.SetWithAdapter"] = premadeThriftType_module_SetWithAdapter
    fbthriftThriftTypesMap["module.StringWithAdapter"] = premadeThriftType_module_StringWithAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter"] = premadeThriftType_module_ListWithElemAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter_withAdapter"] = premadeThriftType_module_ListWithElemAdapter_withAdapter
    fbthriftThriftTypesMap["module.ListWithElemAdapter_withAdapter_2312"] = premadeThriftType_module_ListWithElemAdapter_withAdapter_2312
    fbthriftThriftTypesMap["module.map_string_ListWithElemAdapter_withAdapter_8454"] = premadeThriftType_module_map_string_ListWithElemAdapter_withAdapter_8454
    fbthriftThriftTypesMap["binary"] = premadeThriftType_binary
    fbthriftThriftTypesMap["module.binary_5673"] = premadeThriftType_module_binary_5673
    fbthriftThriftTypesMap["i64"] = premadeThriftType_i64
    fbthriftThriftTypesMap["module.MyI64"] = premadeThriftType_module_MyI64
    fbthriftThriftTypesMap["module.DoubleTypedefI64"] = premadeThriftType_module_DoubleTypedefI64
    fbthriftThriftTypesMap["module.Foo"] = premadeThriftType_module_Foo
    fbthriftThriftTypesMap["module.Baz"] = premadeThriftType_module_Baz
    fbthriftThriftTypesMap["module.Foo_6868"] = premadeThriftType_module_Foo_6868
    fbthriftThriftTypesMap["module.Foo_3943"] = premadeThriftType_module_Foo_3943
    fbthriftThriftTypesMap["module.FooWithAdapter"] = premadeThriftType_module_FooWithAdapter
    fbthriftThriftTypesMap["module.FooWithAdapter_9317"] = premadeThriftType_module_FooWithAdapter_9317
    fbthriftThriftTypesMap["module.Baz_7352"] = premadeThriftType_module_Baz_7352
    fbthriftThriftTypesMap["module.DirectlyAdapted"] = premadeThriftType_module_DirectlyAdapted
    fbthriftThriftTypesMap["module.Bar"] = premadeThriftType_module_Bar
    fbthriftThriftTypesMap["module.IndependentDirectlyAdapted"] = premadeThriftType_module_IndependentDirectlyAdapted
    fbthriftThriftTypesMap["module.StructWithFieldAdapter"] = premadeThriftType_module_StructWithFieldAdapter
    fbthriftThriftTypesMap["module.TerseAdaptedFields"] = premadeThriftType_module_TerseAdaptedFields
    fbthriftThriftTypesMap["module.A"] = premadeThriftType_module_A
    fbthriftThriftTypesMap["module.AdaptedA"] = premadeThriftType_module_AdaptedA
    fbthriftThriftTypesMap["module.B"] = premadeThriftType_module_B
    fbthriftThriftTypesMap["module.Config"] = premadeThriftType_module_Config
    fbthriftThriftTypesMap["module.MyStruct"] = premadeThriftType_module_MyStruct
    fbthriftThriftTypesMap["module.DurationMs"] = premadeThriftType_module_DurationMs
    fbthriftThriftTypesMap["module.IOBuf"] = premadeThriftType_module_IOBuf
    fbthriftThriftTypesMap["module.CustomProtocolType"] = premadeThriftType_module_CustomProtocolType
    fbthriftThriftTypesMap["module.IndirectionString"] = premadeThriftType_module_IndirectionString
    fbthriftThriftTypesMap["bool"] = premadeThriftType_bool
    fbthriftThriftTypesMap["module.AdaptedBool"] = premadeThriftType_module_AdaptedBool
    fbthriftThriftTypesMap["module.AdaptedInteger"] = premadeThriftType_module_AdaptedInteger
    fbthriftThriftTypesMap["module.AdaptTestStruct"] = premadeThriftType_module_AdaptTestStruct
    fbthriftThriftTypesMap["byte"] = premadeThriftType_byte
    fbthriftThriftTypesMap["module.AdaptedByte"] = premadeThriftType_module_AdaptedByte
    fbthriftThriftTypesMap["i16"] = premadeThriftType_i16
    fbthriftThriftTypesMap["module.AdaptedShort"] = premadeThriftType_module_AdaptedShort
    fbthriftThriftTypesMap["module.AdaptedLong"] = premadeThriftType_module_AdaptedLong
    fbthriftThriftTypesMap["double"] = premadeThriftType_double
    fbthriftThriftTypesMap["module.AdaptedDouble"] = premadeThriftType_module_AdaptedDouble
    fbthriftThriftTypesMap["module.AdaptedString"] = premadeThriftType_module_AdaptedString
    fbthriftThriftTypesMap["module.AdaptedEnum"] = premadeThriftType_module_AdaptedEnum
    fbthriftThriftTypesMap["module.DoubleTypedefBool"] = premadeThriftType_module_DoubleTypedefBool
    fbthriftThriftTypesMap["module.AdaptTemplatedTestStruct"] = premadeThriftType_module_AdaptTemplatedTestStruct
    fbthriftThriftTypesMap["module.AdaptTemplatedNestedTestStruct"] = premadeThriftType_module_AdaptTemplatedNestedTestStruct
    fbthriftThriftTypesMap["module.AdaptTestUnion"] = premadeThriftType_module_AdaptTestUnion
    fbthriftThriftTypesMap["module.AdaptedStruct"] = premadeThriftType_module_AdaptedStruct
    fbthriftThriftTypesMap["module.DirectlyAdaptedStruct"] = premadeThriftType_module_DirectlyAdaptedStruct
    fbthriftThriftTypesMap["module.AdaptedTypedef"] = premadeThriftType_module_AdaptedTypedef
    fbthriftThriftTypesMap["module.TypedefOfDirect"] = premadeThriftType_module_TypedefOfDirect
    fbthriftThriftTypesMap["module.StructFieldAdaptedStruct"] = premadeThriftType_module_StructFieldAdaptedStruct
    fbthriftThriftTypesMap["module.CircularStruct"] = premadeThriftType_module_CircularStruct
    fbthriftThriftTypesMap["module.CircularAdaptee"] = premadeThriftType_module_CircularAdaptee
    fbthriftThriftTypesMap["module.AdaptedCircularAdaptee"] = premadeThriftType_module_AdaptedCircularAdaptee
    fbthriftThriftTypesMap["module.DeclaredAfterStruct"] = premadeThriftType_module_DeclaredAfterStruct
    fbthriftThriftTypesMap["module.ReorderedStruct"] = premadeThriftType_module_ReorderedStruct
    fbthriftThriftTypesMap["module.RenamedStruct"] = premadeThriftType_module_RenamedStruct
    fbthriftThriftTypesMap["module.SameNamespaceStruct"] = premadeThriftType_module_SameNamespaceStruct
    fbthriftThriftTypesMap["module.HeapAllocated"] = premadeThriftType_module_HeapAllocated
    fbthriftThriftTypesMap["module.MoveOnly"] = premadeThriftType_module_MoveOnly
    fbthriftThriftTypesMap["module.AlsoMoveOnly"] = premadeThriftType_module_AlsoMoveOnly
    fbthriftThriftTypesMap["module.ApplyAdapter"] = premadeThriftType_module_ApplyAdapter
    fbthriftThriftTypesMap["module.TransitiveAdapted"] = premadeThriftType_module_TransitiveAdapted
    fbthriftThriftTypesMap["module.CountingInt"] = premadeThriftType_module_CountingInt
    fbthriftThriftTypesMap["module.CountingStruct"] = premadeThriftType_module_CountingStruct
    fbthriftThriftTypesMap["module.Person"] = premadeThriftType_module_Person
    fbthriftThriftTypesMap["module.Person2"] = premadeThriftType_module_Person2
    fbthriftThriftTypesMap["module.RenamedStructWithStructAdapterAndFieldAdapter"] = premadeThriftType_module_RenamedStructWithStructAdapterAndFieldAdapter
    fbthriftThriftTypesMap["module.MyI32"] = premadeThriftType_module_MyI32
    fbthriftThriftTypesMap["module.StructWithAdapter"] = premadeThriftType_module_StructWithAdapter
    fbthriftThriftTypesMap["module.UnionWithAdapter"] = premadeThriftType_module_UnionWithAdapter
    fbthriftThriftTypesMap["module.MyI32_4873"] = premadeThriftType_module_MyI32_4873
    fbthriftThriftTypesMap["module.StringWithAdapter_7208"] = premadeThriftType_module_StringWithAdapter_7208
    return fbthriftThriftTypesMap
}()

var structMetadatas = func() []*metadata.ThriftStruct {
    fbthriftResults := make([]*metadata.ThriftStruct, 0)
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MyAnnotation))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Foo))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Baz))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Bar))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_DirectlyAdapted))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_IndependentDirectlyAdapted))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_StructWithFieldAdapter))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_TerseAdaptedFields))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_B))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_A))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Config))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MyStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptTestStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptTemplatedTestStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptTemplatedNestedTestStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptTestUnion))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AdaptedStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_DirectlyAdaptedStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_StructFieldAdaptedStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CircularAdaptee))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CircularStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ReorderedStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_DeclaredAfterStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_RenamedStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_SameNamespaceStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_HeapAllocated))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_MoveOnly))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_AlsoMoveOnly))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_ApplyAdapter))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_TransitiveAdapted))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_CountingStruct))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Person))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_Person2))
    fbthriftResults = append(fbthriftResults, getMetadataThriftStruct(premadeStructSpec_RenamedStructWithStructAdapterAndFieldAdapter))
    return fbthriftResults
}()

var exceptionMetadatas = func() []*metadata.ThriftException {
    fbthriftResults := make([]*metadata.ThriftException, 0)
    return fbthriftResults
}()

var enumMetadatas = func() []*metadata.ThriftEnum {
    fbthriftResults := make([]*metadata.ThriftEnum, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.Color",
            Elements: map[int32]string{
                0: "UNKNOWN",
                1: "RED",
                2: "GREEN",
                3: "BLUE",
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftEnum{
            Name:     "module.ThriftAdaptedEnum",
            Elements: map[int32]string{
                0: "Zero",
                1: "One",
            },
        },
    )
    return fbthriftResults
}()

var serviceMetadatas = func() []*metadata.ThriftService {
    fbthriftResults := make([]*metadata.ThriftService, 0)
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.Service",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "func",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_MyI32_4873,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "arg1",
                            IsOptional: false,
                            Type:       premadeThriftType_module_StringWithAdapter_7208,
                        },
                        &metadata.ThriftField{
                            Id:         2,
                            Name:       "arg2",
                            IsOptional: false,
                            Type:       premadeThriftType_string,
                        },
                        &metadata.ThriftField{
                            Id:         3,
                            Name:       "arg3",
                            IsOptional: false,
                            Type:       premadeThriftType_module_Foo,
                        },
                    },
                },
            },
        },
    )
    fbthriftResults = append(fbthriftResults,
        &metadata.ThriftService{
            Name:      "module.AdapterService",
            Functions: []*metadata.ThriftFunction{
                &metadata.ThriftFunction{
                    Name:       "count",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_CountingStruct,
                },
                &metadata.ThriftFunction{
                    Name:       "adaptedTypes",
                    IsOneway:   false,
                    ReturnType: premadeThriftType_module_HeapAllocated,
                    Arguments:  []*metadata.ThriftField{
                        &metadata.ThriftField{
                            Id:         1,
                            Name:       "arg",
                            IsOptional: false,
                            Type:       premadeThriftType_module_HeapAllocated,
                        },
                    },
                },
            },
        },
    )
    return fbthriftResults
}()

// GetMetadataThriftType (INTERNAL USE ONLY).
// Returns metadata ThriftType for a given full type name.
func GetMetadataThriftType(fullName string) *metadata.ThriftType {
    return premadeThriftTypesMap[fullName]
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *metadata.ThriftMetadata {
    allEnumsMap := make(map[string]*metadata.ThriftEnum)
    allStructsMap := make(map[string]*metadata.ThriftStruct)
    allExceptionsMap := make(map[string]*metadata.ThriftException)
    allServicesMap := make(map[string]*metadata.ThriftService)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }
    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }
    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }
    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // Obtain Thrift metadatas from recursively included programs...
    var recursiveThriftMetadatas []*metadata.ThriftMetadata

    // ...now merge metadatas from recursively included programs.
    for _, thriftMetadata := range recursiveThriftMetadatas {
        maps.Copy(allEnumsMap, thriftMetadata.GetEnums())
        maps.Copy(allStructsMap, thriftMetadata.GetStructs())
        maps.Copy(allExceptionsMap, thriftMetadata.GetExceptions())
        maps.Copy(allServicesMap, thriftMetadata.GetServices())
    }

    return metadata.NewThriftMetadata().
        SetEnums(allEnumsMap).
        SetStructs(allStructsMap).
        SetExceptions(allExceptionsMap).
        SetServices(allServicesMap)
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *metadata.ThriftMetadata {
    thriftMetadata := GetThriftMetadata()

    allServicesMap := thriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*metadata.ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    thriftMetadata.SetServices(relevantServicesMap)

    return thriftMetadata
}

func getMetadataThriftPrimitiveType(s *thrift.CodecPrimitiveSpec) *metadata.ThriftPrimitiveType {
	var value metadata.ThriftPrimitiveType

	switch s.PrimitiveType {
	case thrift.CODEC_PRIMITIVE_TYPE_BYTE:
		value = metadata.ThriftPrimitiveType_THRIFT_BYTE_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_BOOL:
		value = metadata.ThriftPrimitiveType_THRIFT_BOOL_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I16:
		value = metadata.ThriftPrimitiveType_THRIFT_I16_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I32:
		value = metadata.ThriftPrimitiveType_THRIFT_I32_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_I64:
		value = metadata.ThriftPrimitiveType_THRIFT_I64_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_FLOAT:
		value = metadata.ThriftPrimitiveType_THRIFT_FLOAT_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_DOUBLE:
		value = metadata.ThriftPrimitiveType_THRIFT_DOUBLE_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_BINARY:
		value = metadata.ThriftPrimitiveType_THRIFT_BINARY_TYPE
	case thrift.CODEC_PRIMITIVE_TYPE_STRING:
		value = metadata.ThriftPrimitiveType_THRIFT_STRING_TYPE
	}

	return thrift.Pointerize(value)
}

func getMetadataThriftEnumType(s *thrift.CodecEnumSpec) *metadata.ThriftEnumType {
	return metadata.NewThriftEnumType().
		SetName(s.ScopedName)
}

func getMetadataThriftSetType(s *thrift.CodecSetSpec) *metadata.ThriftSetType {
	return metadata.NewThriftSetType().
		SetValueType(getMetadataThriftType(s.ElementTypeSpec))
}

func getMetadataThriftListType(s *thrift.CodecListSpec) *metadata.ThriftListType {
	return metadata.NewThriftListType().
		SetValueType(getMetadataThriftType(s.ElementTypeSpec))
}

func getMetadataThriftMapType(s *thrift.CodecMapSpec) *metadata.ThriftMapType {
	return metadata.NewThriftMapType().
		SetKeyType(getMetadataThriftType(s.KeyTypeSpec)).
		SetValueType(getMetadataThriftType(s.ValueTypeSpec))
}

func getMetadataThriftTypedefType(s *thrift.CodecTypedefSpec) *metadata.ThriftTypedefType {
	return metadata.NewThriftTypedefType().
		SetName(s.ScopedName).
		SetUnderlyingType(getMetadataThriftType(s.UnderlyingTypeSpec))
}

func getMetadataThriftStructType(s *thrift.CodecStructSpec) *metadata.ThriftStructType {
	return metadata.NewThriftStructType().
		SetName(s.ScopedName)
}

func getMetadataThriftUnionType(s *thrift.CodecStructSpec) *metadata.ThriftUnionType {
	return metadata.NewThriftUnionType().
		SetName(s.ScopedName)
}

func getMetadataThriftType(s *thrift.TypeSpec) *metadata.ThriftType {
	thriftType := metadata.NewThriftType()
	switch {
	case s.CodecPrimitiveSpec != nil:
		thriftType.SetTPrimitive(getMetadataThriftPrimitiveType(s.CodecPrimitiveSpec))
	case s.CodecEnumSpec != nil:
		thriftType.SetTEnum(getMetadataThriftEnumType(s.CodecEnumSpec))
	case s.CodecSetSpec != nil:
		thriftType.SetTSet(getMetadataThriftSetType(s.CodecSetSpec))
	case s.CodecListSpec != nil:
		thriftType.SetTList(getMetadataThriftListType(s.CodecListSpec))
	case s.CodecMapSpec != nil:
		thriftType.SetTMap(getMetadataThriftMapType(s.CodecMapSpec))
	case s.CodecTypedefSpec != nil:
		thriftType.SetTTypedef(getMetadataThriftTypedefType(s.CodecTypedefSpec))
	case s.CodecStructSpec != nil:
		if s.CodecStructSpec.IsUnion {
			thriftType.SetTUnion(getMetadataThriftUnionType(s.CodecStructSpec))
		} else {
			thriftType.SetTStruct(getMetadataThriftStructType(s.CodecStructSpec))
		}
	}
	return thriftType
}

func getMetadataThriftField(s *thrift.FieldSpec) *metadata.ThriftField {
	return metadata.NewThriftField().
		SetId(int32(s.ID)).
		SetName(s.Name).
		SetIsOptional(s.IsOptional).
		SetType(getMetadataThriftType(s.ValueTypeSpec))
}

func getMetadataThriftStruct(s *thrift.StructSpec) *metadata.ThriftStruct {
	metadataThriftFields := make([]*metadata.ThriftField, len(s.FieldSpecs), len(s.FieldSpecs))
	for i, fieldSpec := range s.FieldSpecs {
		metadataThriftFields[i] = getMetadataThriftField(&fieldSpec)
	}

	return metadata.NewThriftStruct().
		SetName(s.ScopedName).
		SetIsUnion(s.IsUnion).
		SetFields(metadataThriftFields)
}

func getMetadataThriftException(s *thrift.StructSpec) *metadata.ThriftException {
	metadataThriftFields := make([]*metadata.ThriftField, len(s.FieldSpecs), len(s.FieldSpecs))
	for i, fieldSpec := range s.FieldSpecs {
		metadataThriftFields[i] = getMetadataThriftField(&fieldSpec)
	}

	return metadata.NewThriftException().
		SetName(s.ScopedName).
		SetFields(metadataThriftFields)
}

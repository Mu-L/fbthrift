// Autogenerated by Thrift for thrift/test/go/if/dummy.thrift
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//  @generated

package dummy

import (
    "fmt"
    "reflect"

    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift/types"
)

// (needed to ensure safety because of naive import list construction)
var _ = fmt.Printf
var _ = reflect.Ptr
var _ = thrift.ZERO


// Service req/resp structs (below)
type reqDummyEcho struct {
    Value string `thrift:"value,1" json:"value" db:"value"`
}
// Compile time interface enforcer
var _ thrift.Struct = (*reqDummyEcho)(nil)

// Deprecated: DummyEchoArgsDeprecated is deprecated, since it is supposed to be internal.
type DummyEchoArgsDeprecated = reqDummyEcho

func newReqDummyEcho() *reqDummyEcho {
    return (&reqDummyEcho{}).setDefaults()
}

func (x *reqDummyEcho) GetValue() string {
    return x.Value
}

func (x *reqDummyEcho) SetValueNonCompat(value string) *reqDummyEcho {
    x.Value = value
    return x
}

func (x *reqDummyEcho) SetValue(value string) *reqDummyEcho {
    x.Value = value
    return x
}



func (x *reqDummyEcho) Write(p thrift.Encoder) error {
    return thrift.WriteStructSpec(p, x, x.getStructSpec())
}

func (x *reqDummyEcho) Read(p thrift.Decoder) error {
    return thrift.ReadStructSpec(p, x, x.getStructSpec())
}

func (x *reqDummyEcho) String() string {
    return thrift.StructToString(reflect.ValueOf(x))
}

func (x *reqDummyEcho) setDefaults() *reqDummyEcho {
    return x.
        SetValueNonCompat("")
}

func (x *reqDummyEcho) getStructSpec() *thrift.StructSpec {
    return premadeStructSpec_reqDummyEcho
}

type respDummyEcho struct {
    Success *string `thrift:"success,0,optional" json:"success,omitempty" db:"success"`
}
// Compile time interface enforcer
var _ thrift.Struct = (*respDummyEcho)(nil)
var _ thrift.WritableResult = (*respDummyEcho)(nil)

// Deprecated: DummyEchoResultDeprecated is deprecated, since it is supposed to be internal.
type DummyEchoResultDeprecated = respDummyEcho

func newRespDummyEcho() *respDummyEcho {
    return (&respDummyEcho{}).setDefaults()
}

func (x *respDummyEcho) GetSuccess() string {
    if !x.IsSetSuccess() {
        return ""
    }
    return *x.Success
}

func (x *respDummyEcho) SetSuccessNonCompat(value string) *respDummyEcho {
    x.Success = &value
    return x
}

func (x *respDummyEcho) SetSuccess(value *string) *respDummyEcho {
    x.Success = value
    return x
}

func (x *respDummyEcho) IsSetSuccess() bool {
    return x != nil && x.Success != nil
}




func (x *respDummyEcho) Exception() thrift.WritableException {
    return nil
}

func (x *respDummyEcho) Write(p thrift.Encoder) error {
    return thrift.WriteStructSpec(p, x, x.getStructSpec())
}

func (x *respDummyEcho) Read(p thrift.Decoder) error {
    return thrift.ReadStructSpec(p, x, x.getStructSpec())
}

func (x *respDummyEcho) String() string {
    return thrift.StructToString(reflect.ValueOf(x))
}

func (x *respDummyEcho) setDefaults() *respDummyEcho {
    return x
}

func (x *respDummyEcho) getStructSpec() *thrift.StructSpec {
    return premadeStructSpec_respDummyEcho
}

type reqDummyOnewayRPC struct {
    Value string `thrift:"value,1" json:"value" db:"value"`
}
// Compile time interface enforcer
var _ thrift.Struct = (*reqDummyOnewayRPC)(nil)

// Deprecated: DummyOnewayRPCArgsDeprecated is deprecated, since it is supposed to be internal.
type DummyOnewayRPCArgsDeprecated = reqDummyOnewayRPC

func newReqDummyOnewayRPC() *reqDummyOnewayRPC {
    return (&reqDummyOnewayRPC{}).setDefaults()
}

func (x *reqDummyOnewayRPC) GetValue() string {
    return x.Value
}

func (x *reqDummyOnewayRPC) SetValueNonCompat(value string) *reqDummyOnewayRPC {
    x.Value = value
    return x
}

func (x *reqDummyOnewayRPC) SetValue(value string) *reqDummyOnewayRPC {
    x.Value = value
    return x
}



func (x *reqDummyOnewayRPC) Write(p thrift.Encoder) error {
    return thrift.WriteStructSpec(p, x, x.getStructSpec())
}

func (x *reqDummyOnewayRPC) Read(p thrift.Decoder) error {
    return thrift.ReadStructSpec(p, x, x.getStructSpec())
}

func (x *reqDummyOnewayRPC) String() string {
    return thrift.StructToString(reflect.ValueOf(x))
}

func (x *reqDummyOnewayRPC) setDefaults() *reqDummyOnewayRPC {
    return x.
        SetValueNonCompat("")
}

func (x *reqDummyOnewayRPC) getStructSpec() *thrift.StructSpec {
    return premadeStructSpec_reqDummyOnewayRPC
}

type respDummyOnewayRPC struct {
}
// Compile time interface enforcer
var _ thrift.Struct = (*respDummyOnewayRPC)(nil)
var _ thrift.WritableResult = (*respDummyOnewayRPC)(nil)

// Deprecated: DummyOnewayRPCResultDeprecated is deprecated, since it is supposed to be internal.
type DummyOnewayRPCResultDeprecated = respDummyOnewayRPC

func newRespDummyOnewayRPC() *respDummyOnewayRPC {
    return (&respDummyOnewayRPC{}).setDefaults()
}



func (x *respDummyOnewayRPC) Exception() thrift.WritableException {
    return nil
}

func (x *respDummyOnewayRPC) Write(p thrift.Encoder) error {
    return thrift.WriteStructSpec(p, x, x.getStructSpec())
}

func (x *respDummyOnewayRPC) Read(p thrift.Decoder) error {
    return thrift.ReadStructSpec(p, x, x.getStructSpec())
}

func (x *respDummyOnewayRPC) String() string {
    return thrift.StructToString(reflect.ValueOf(x))
}

func (x *respDummyOnewayRPC) setDefaults() *respDummyOnewayRPC {
    return x
}

func (x *respDummyOnewayRPC) getStructSpec() *thrift.StructSpec {
    return premadeStructSpec_respDummyOnewayRPC
}


